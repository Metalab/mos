
======================================================================
HOW TO SET UP A LOCAL INSTALLATION OF METALAB OS TO CONTRIBUTE PATCHES
======================================================================

1. git clone git@github.com:Metalab/mos.git

2. On a Debian-based system:
     apt-get install python3-venv

   On OpenSuSE:
     zypper install python-venv

   On any other system:
     easy_install pip
     pip install venv

3. Create the virtualenv (call it "devel"): python -m venv devel
4. Acivate the "devel" virtualenv: source devel/bin/activate
5. Install dependencies: pip install -r requirements.txt
   (Note: Requires a C compiler and the python development headers.
   Debian: apt-get install python-dev build-essential
   OpenSuSE: zypper in -t pattern devel_C_C++ devel_python)

6. Install dev dependencies: pip install -r requirements-dev.txt
6b. Install pre-commit to ensure linting and code style: pre-commit install
7. Optional: Install the locale packages for de_DE.UTF-8
8. Put a temporary key into mos/settings/secret_key.py (SECRET_KEY='bla')
8a. python manage.py generate_secret_key (optional for development) and then
8b. Put output into secret_key.py (SECRET_KEY='<output>') (also optional)
9. python manage.py migrate
10. python manage.py createsuperuser

11. Load example data (optional, but recommended):
     python manage.py loaddata core/fixtures/default_choices.json
     python manage.py loaddata members/fixtures/default_choices.json
     python manage.py loaddata members/fixtures/dummy_members.json
     python manage.py loaddata cal/fixtures/events_2012-09-20.json

12. python manage.py runserver
13. Point your browser to http://127.0.0.1:8000/
14. Login with your freshly-created user account

Testing
=======
After you've made some changes to the code, rerun the test suite to check
that everything still works. You can do this from the project root by issuing:

    ./manage.py test

If you have a test failing, you can rerun only the app responsible to iterate
faster. E.g. if you have an error somewhere inside the cal package, do:

    ./manage.py test cal


Further Reading
===============

Virtualenv/Pip Basics: https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/
Python Docs: https://docs.python.org/
Django Docs: https://docs.djangoproject.com/
